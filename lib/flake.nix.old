{
  description = "Advanced example of Nix-on-Droid system config with home-manager.";

  outputs = inputs@{ self, home-manager, ... }:
    let
      mod = "${self}/system";
    in
    {
      nixOnDroidConfigurations.default = inputs.nix-on-droid.lib.nixOnDroidConfiguration {
        extraSpecialArgs = { inherit inputs self; };
        modules = [
          "${mod}/nix"
          "${mod}/core"
          # "${mod}/core/nixpkgs.nix"
          {
            home-manager = {
              config = ./home;
              backupFileExtension = "hm-bak";
             # useGlobalPkgs = true;
             useUserPackages = true;
              extraSpecialArgs = { inherit inputs self; };
            };
          }
        ];
        pkgs = import inputs.nixpkgs {
          system = "aarch64-linux";
          overlays = [
            (final: prev: {
              aysixi = inputs.aysixi.packages."${prev.system}";
            })
            inputs.nix-on-droid.overlays.default
          ];
        };
        home-manager-path = home-manager.outPath;
      };
    };


  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    home-manager = {
      url = "github:nix-community/home-manager";
      inputs.nixpkgs.follows = "nixpkgs";
    };
    nix-on-droid = {
      url = "github:nix-community/nix-on-droid/release-24.05";
      inputs.nixpkgs.follows = "nixpkgs";
      inputs.home-manager.follows = "home-manager";
    };
    nix-index-database = {
      url = "github:nix-community/nix-index-database";
      inputs.nixpkgs.follows = "nixpkgs";
    };
    nvim-flake.url = "github:aysixi/nvim-flake";
    nixd.url = "github:nix-community/nixd";
    rust-overlay.url = "github:oxalica/rust-overlay";
    aysixi = {
      url = "github:aysixi/nur-packages";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };
}
